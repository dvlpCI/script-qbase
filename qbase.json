{
    "quickCmd": [
        {
            "type": "branch",
            "des": "分支",
            "values": [
                {
                    "des": "获取当前分支【在指定日期后】的所有合入记录",
                    "cmd": "get_merger_recods_after_date",
                    "value": "qbase -quick get_merger_recods_after_date \"2022-12-26 10:45:24\""
                },
                {
                    "des": "获取当前分支【在rebase指定分支后】的所有分支名",
                    "cmd": "getBranchNamesAccordingToRebaseBranch",
                    "value": "qbase -quick getBranchNamesAccordingToRebaseBranch -rebaseBranch \"master\" --add-value 1 -onlyName true --verbose"
                },
                {
                    "des": "获取当前分支【在rebase指定分支后】的所有分支信息合入指定文件中",
                    "cmd": "getBranchMapsAccordingToRebaseBranch",
                    "value": "qbase -quick getBranchMapsAccordingToRebaseBranch -rebaseBranch \"master\" --add-value 1 -onlyName true --verbose"
                }
                
            ]
        }
    ],
    "support_script_path": [
        {
            "type": "foundation",
            "des": "字符串处理(截取)",
            "values": [
                {
                    "des": "字符串长度截取",
                    "key": "intercept_string",
                    "value": "./foundation/intercept_string.sh",
                    "example": "sh xxx.sh -string \"$string3\" -maxLength 30"
                }
            ]
        },
        {
            "type": "log",
            "des": "打印日志",
            "values": [
                {
                    "des": "将信息打印到控制台",
                    "key": "function_log_msg",
                    "value": "./log/function_log_msg.sh",
                    "example": "source xxx & yyy"
                }
            ]
        },
        {
            "type": "env_var",
            "des": "环境变量",
            "values": [
                {
                    "des": "环境变量文件的操作(生效环境变量文件、打开环境变量文件)",
                    "key": "env_var_effective_or_open",
                    "value": "./env_variables/env_var_effective_or_open.sh"
                },
                {
                    "key": "env_var_add_or_update",
                    "des": "环境变量值的更新(没有该key则创建，已有该key则是更新，来避免重复多行)",
                    "value": "./env_variables/env_var_add_or_update.sh"
                }
            ]
        },
        {
            "type": "package",
            "des": "脚本包",
            "values": [
                {
                    "key": "get_package_util",
                    "des": "脚本包的信息获取(版本号、根目录信息)",
                    "value": "./package/get_package_info.sh"
                },
                {
                    "key": "install_package",
                    "des": "检查安装环境，且未安装时候需要进行安装",
                    "value": "./package/install_package.sh"
                }
            ]
        },
        {
            "type": "value_update",
            "des": "内容值更新(文本或文件中)",
            "values": [
                {
                    "key": "sedtext",
                    "des": "任意文件中的值的更新，根据值的位置",
                    "value": "./update_value/sed_text.sh"
                },
                {
                    "key": "update_json_file_singleString",
                    "des": "json文件中的值的更新，根据指定key的位置",
                    "value": "./update_value/update_json_file_singleString.sh"
                },
                {
                    "key": "py_update_json_file",
                    "des": "json文件中的值的更新，使用python实现",
                    "value": "./update_value/update_json_file.py"
                }
            ]
        },
        {
            "type": "path",
            "des": "路径",
            "values": [
                {
                    "key": "join_paths",
                    "des": "拼接字符串",
                    "example": "./join_paths.sh --path_a \"/path/to/dir_a\" --path_b \"sub_dir_b\" --create_ifNoExsit \"true\"",
                    "value": "./path_util/join_paths.sh"
                },
                {
                    "key": "get_dirpath_by_relpath",
                    "des": "获取相对于指定文件/目录的相对目录的绝对路径",
                    "example": "./get_dirpath_by_relpath.sh --file_or_dir_path \"/path/to/file_a\" --rel_path \"sub_dir_b\"",
                    "value": "./path_util/get_dirpath_by_relpath.sh"
                }
            ]
        },
        {
            "type": "date",
            "des": "日期",
            "values": [
                {
                    "key": "days_cur_to_MdDate",
                    "des": "日期的相关计算方法--用来计算提测过程中的各个日期,与当前时间的天数间隔",
                    "example": "sh ./date/days_cur_to_MdDate.sh --Md_date \"12.09\"",
                    "value": "./date/days_cur_to_MdDate.sh"
                },
                {
                    "key": "calculate_newdate",
                    "des": "日期的相关计算方法--用来获取新时间(通过旧时间的加减)",
                    "example": "sh ./date/calculate_newdate.sh --old-date $old_date --add-value \"1\" --add-type \"second\"",
                    "value": "./date/calculate_newdate.sh"
                }
            ]
        },
        {
            "type": "json_check",
            "des": "json检查(文件中)",
            "values": [
                {
                    "des": "环境变量文件的操作(生效环境变量文件、打开环境变量文件)",
                    "key": "json_file_check",
                    "value": "./json_check/json_file_check.sh",
                    "example": "sh ./json_file_check.sh -checkedJsonF \"${Checked_JSON_FILE_PATH}\" -scriptResultJsonF \"${SCRIPT_RESULT_JSON_FILE}\""
                }
            ]
        },
        {
            "type": "branch",
            "des": "分支",
            "values": [
                {
                    "key": "rebasebranch_last_commit_date",
                    "des": "获取当前分支新代码的起始时间",
                    "example": "sh ./branch/rebasebranch_last_commit_date.sh -rebaseBranch \"master\"",
                    "value": "./branch/rebasebranch_last_commit_date.sh"
                },
                {
                    "des": "获取执行此脚本的分支在指定日期后的第一条提交记录及其所属的所有分支",
                    "key": "first_commit_info_after_date",
                    "value": "./branch/first_commit_info_after_date.sh -date \"2022-12-26 10:45:24\""
                },
                {
                    "key": "get_merger_recods_after_date",
                    "des": "获取指定日期之后的所有合入记录(已去除 HEAD -> 等)",
                    "example": "sh ./get_merger_recods_after_date.sh --searchFromDateString \"2022-12-26 10:45:24\"",
                    "value": "./branch/get_merger_recods_after_date.sh"
                }
            ]
        },
        {
            "type": "branchMaps",
            "des": "分支",
            "values": [
                {
                    "key": "addBranchMaps_toJsonFile",
                    "des": "获取所有指定分支名的branchMaps输出到指定文件中，如有缺失输出缺失错误",
                    "example": "sh ./branchMaps_10_resouce/addBranchMaps_toJsonFile.sh -branchMapsFromDir \"${BranceMaps_From_Directory_PATH}\" -branchMapsAddToJsonF \"${BranchMapAddToJsonFile}\" -branchMapsAddToKey \"${BranchMapAddToKey}\" -requestBranchNamesString \"${requestBranchNamesString}\"",
                    "value": "./branchMaps_10_resouce/addBranchMaps_toJsonFile.sh"
                },
                {
                    "key": "get20_branchMapsInfo_byHisJsonFile",
                    "des": "获取branchMaps整理后的分支信息",
                    "example": "sh ./branchMaps_20_info/get20_branchMapsInfo_byHisJsonFile.sh -branchMapsInJsonF \"${Develop_Branchs_FILE_PATH}\" -branchMapsInKey \".package_merger_branchs\" -showCategoryName \"${showCategoryName}\" -showFlag \"${showBranchLogFlag}\" -showName \"${showBranchName}\" -showTime \"${showBranchTimeLog}\" -showAt \"${showBranchAtLog}\" -showTable \"${showBranchTable}\" -shouldMD \"${shouldMarkdown}\" -resultSaveToJsonF \"${TEST_DATA_RESULT_FILE_PATH}\" -resultBranchKey \"${RESULT_BRANCH_ARRAY_SALE_BY_KEY}\" -resultCategoryKey \"${RESULT_CATEGORY_ARRAY_SALE_BY_KEY}\" -resultFullKey \"${RESULT_FULL_STRING_SALE_BY_KEY}\"",
                    "value": "./branchMaps_20_info/get20_branchMapsInfo_byHisJsonFile.sh"
                }
            ]
        }
    ]
}